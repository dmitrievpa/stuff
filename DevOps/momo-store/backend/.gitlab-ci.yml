variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "eslint,gosec,nodejs-scan"
include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
stages:
  - build
  - test
  - release
  - deploy
build-backend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  variables: 
    KANIKO_CACHE_ARGS: "--cache=true --cache-copy-layers=true --cache-ttl=24h"
  script:
    - > 
      mkdir -p /kaniko/.docker
      echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
        --context $CI_PROJECT_DIR/backend
        --build-arg VERSION=$VERSION
        --dockerfile $CI_PROJECT_DIR/backend/Dockerfile $KANIKO_CACHE_ARGS
        --destination $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
  rules:
    - changes:
        - backend/**/*
test:
  stage: test
  image: golang:1.19
  script:
  - cd backend
  - go test -v ./...
container_scanning:
  stage: test
  variables:
    CS_IMAGE: $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
    CS_REGISTRY_USER: $DOCKER_USER
    CS_REGISTRY_PASSWORD: ${DOCKER_TOKEN}
  artifacts:
    paths:
      - gl-container-scanning-report.json
  rules:
    - changes:
        - backend/**/*
sonarqube-backend:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: ${CI_PROJECT_DIR}/.sonar
    GIT_DEPTH: 0
  script:
    - cd backend
    - >
      sonar-scanner
      -Dsonar.sources=.
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=$SONAR_BACKEND_PROJECT_KEY
      -Dsonar.host.url=$SONARQUBE_URL
      -Dsonar.login=$SONAR_BACKEND_TOKEN
      -Dsonar.scm.provider=git
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  rules:
    - changes:
           - backend/**/*
  allow_failure: true
upload-backend:
  stage: release
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-backend:${VERSION}-$CI_COMMIT_BRANCH
    - docker tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-backend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-backend:${VERSION}-$CI_COMMIT_BRANCH
    - docker push $CI_REGISTRY_IMAGE/momo-backend:latest
update-variable:
  stage: release
  script:
    - curl --request PUT --header "PRIVATE-TOKEN:${GITLAB_ACCESS_TOKEN}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/variables/BACKEND_VERSION" --form "value=${VERSION}-${CI_COMMIT_BRANCH}"
  
deploy-backend:
  stage: deploy
  when: manual
  trigger:
    include:
      - project: 'p.dmitriev/momo-store-infra'
        ref: $CI_COMMIT_BRANCH
        file: '/momo-store-backend.gitlab-ci.yml'
    strategy: depend
